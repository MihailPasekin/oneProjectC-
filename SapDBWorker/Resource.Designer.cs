//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SapDBWorkerLib {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SapDBWorkerLib.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select 
        ///	&quot;ItmsGrpCod&quot;, 
        ///	&quot;ItmsGrpNam&quot; 
        ///from 
        ///	test.oitb 
        ///where &quot;ItmsGrpCod&quot; in (101, 102);.
        /// </summary>
        internal static string GetItemGroups {
            get {
                return ResourceManager.GetString("GetItemGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select 
        ///sele2.&quot;CashAcct&quot; ,
        ///sele2.&quot;comming&quot;,
        ///sele2.&quot;startday&quot; as &quot;startdayClean&quot; ,
        ///sele2.&quot;startday&quot; + 
        ///	(case when sele2.&quot;incometransactbefore&quot; is null then 0 else sele2.&quot;incometransactbefore&quot; end) - 
        ///	(case when sele2.&quot;trbefore&quot; is null then 0 else sele2.&quot;trbefore&quot; end)  - 
        ///	(case when sele2.&quot;expensebefore&quot; is null then 0 else sele2.&quot;expensebefore&quot; end) as &quot;startday&quot;,
        ///sele2.&quot;expense&quot;,
        ///sele2.&quot;transct&quot;,
        ///sele2.&quot;trbefore&quot;,
        ///sele2.&quot;expensebefore&quot;,
        ///sele2.&quot;incometransact&quot;,
        ///sele2.&quot;incometransactbefore&quot;, [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string KassaStartDayEndDay {
            get {
                return ResourceManager.GetString("KassaStartDayEndDay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select test.ocrd.&quot;CardCode&quot; , test.ocrd.&quot;CardName&quot; from test.ocrd 
        ///where
        ///test.ocrd.&quot;CardType&quot; = &apos;S&apos;.
        /// </summary>
        internal static string SqlConsignmentClient {
            get {
                return ResourceManager.GetString("SqlConsignmentClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select 
        ///	t0.&quot;ItemCode&quot;,
        ///	t0.&quot;ItemName&quot;,
        ///	sum(t0.&quot;OnHand&quot;),
        ///	t0.&quot;PriceBuy&quot;,
        ///	t0.&quot;PriceSale&quot;,
        ///	sum	(t0.&quot;pdnQuantity&quot;) as  &quot;GoodsReceipt&quot;,--&quot;Поступление&quot;,
        ///	sum (t0.&quot;invQuantity&quot; - t0.&quot;rdnQuantity&quot;) as &quot;ProductsSold&quot;,--&quot;Реализовано&quot;,
        ///	sum (t0.&quot;rpdQuantity&quot;) as &quot;ReturnSupplier&quot;, --&quot;Возврат поставщику&quot;,
        ///	sum (((t0.&quot;PriceSale&quot; - t0.&quot;PriceBuy&quot;) * (t0.&quot;invQuantity&quot; - t0.&quot;rdnQuantity&quot; ))) as &quot;CommissionAgentRemunAmount&quot;, --&quot;Сумма возграждения комиссионера&quot;,
        ///	sum ((t0.&quot;PriceBuy&quot; * (t0.&quot;invQuantity&quot; - t0.&quot;rdn [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlConsignmentReportUpdated {
            get {
                return ResourceManager.GetString("SqlConsignmentReportUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select a.&quot;route&quot;,
        ///	a.&quot;territoty&quot;,
        ///	a.&quot;agent&quot;,
        ///	a.&quot;docNum&quot;,
        ///	a.&quot;deliveryDate&quot;,
        ///	a.&quot;client&quot;,
        ///	a.&quot;orderSum&quot;,
        ///	a.&quot;consignment&quot;,
        ///	a.&quot;transfer&quot;,
        ///	a.&quot;credit7&quot;,
        ///	a.&quot;credit14&quot;,
        ///	a.&quot;credit30&quot;,
        ///	(CASE WHEN a.&quot;expired&quot; &gt; 0 then a.&quot;expired&quot; else 0 end) as &quot;ostalos&quot;,
        ///	(CASE WHEN a.&quot;expired&quot; &lt; 0 then a.&quot;expired&quot; else 0 end) as &quot;expired&quot;,
        ///	a.&quot;balance&quot;,
        ///	a.&quot;creditSum&quot;,
        ///	a.&quot;SumOplaty&quot;,
        ///	a.&quot;SumVozvrat&quot;
        ///from (
        ///	SELECT S1.&quot;U_RouteID&quot; as &quot;route&quot;,  
        ///		S1.&quot;Territory&quot; as &quot;territoty&quot;,
        ///		CONCAT(S6.&quot;lastName&quot;, CON [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlCreditReport {
            get {
                return ResourceManager.GetString("SqlCreditReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select 
        ///odln.&quot;DocEntry&quot;,
        ///odln.&quot;DocNum&quot;,
        ///odln.&quot;CardCode&quot;, 
        ///odln.&quot;DocDate&quot;, 
        ///odln.&quot;CardName&quot;, 
        ///odln.&quot;DocTotal&quot;, 
        ///odln.&quot;Comments&quot;, 
        ///odln.&quot;U_Agent&quot;, 
        ///odln.&quot;U_Supervisor&quot;,
        ///octg.&quot;PymntGroup&quot;,
        ///CONCAT(ohem.&quot;firstName&quot;,CONCAT(&apos; &apos;, ohem.&quot;lastName&quot;)) as &quot;NameAgent&quot; ,
        ///CONCAT(ohem1.&quot;firstName&quot;,CONCAT(&apos; &apos;, ohem1.&quot;lastName&quot;)) as &quot;NameSupervisor&quot; 
        ///from test.odln 
        ///inner join test.OCTG octg on odln.&quot;GroupNum&quot; = octg.&quot;GroupNum&quot;
        ///inner join test.OHEM ohem on odln.&quot;OwnerCode&quot; = ohem.&quot;empID&quot;
        ///inner join test.OHEM o [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlDeliveryForReport {
            get {
                return ResourceManager.GetString("SqlDeliveryForReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select
        ///	case when b.&quot;Name&quot; is null
        ///	then
        ///		case when b.&quot;CardCode&quot; is null  then &apos;Другие&apos; else b.&quot;CardCode&quot; end
        ///	else
        ///		b.&quot;Name&quot;
        ///	end as &quot;Name&quot;,
        ///	b.&quot;CashSum&quot;,
        ///	b.&quot;CreditSum&quot;,
        ///	b.&quot;Bank&quot;,
        ///	b.&quot;Consignment&quot;,
        ///	b.&quot;DocTotal&quot;,
        ///	b.&quot;raschod&quot;,
        ///	b.&quot;perevod&quot;
        ///from
        ///(
        ///	Select
        ///		a.&quot;U_Supervisor&quot;,
        ///		a.&quot;U_Agent&quot;,
        ///		a.&quot;CardCode&quot;,
        ///		(case when a.&quot;Account&quot; = &apos;6212 51 02&apos;
        ///		then
        ///			(
        ///			select 
        ///				(
        ///					CASE WHEN a.&quot;U_Supervisor&quot; is not null  
        ///					THEN  
        ///						CONCAT(S5.&quot;firstName&quot;,CONCAT(&apos; &apos;, S5.&quot;las [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlDeylyKassa {
            get {
                return ResourceManager.GetString("SqlDeylyKassa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select 
        ///	ohem.&quot;empID&quot;, 
        ///	ohem.&quot;firstName&quot;, 
        ///	ohem.&quot;lastName&quot;, 
        ///	ohem.&quot;middleName&quot;, 
        ///	ohem.&quot;sex&quot;, 
        ///	ohem.&quot;jobTitle&quot;, 
        ///	ohem.&quot;dept&quot;, 
        ///	ohem.&quot;birthDate&quot;,
        ///	ohem.&quot;mobile&quot;,
        ///	ohem.&quot;homeTel&quot;,
        ///	ohem.&quot;email&quot;,
        ///	ohem.&quot;workStreet&quot;,
        ///	ohem.&quot;workCity&quot; 
        ///from 
        ///	test.OHEM ohem
        ///where ohem.&quot;jobTitle&quot; = TITLE
        ///;.
        /// </summary>
        internal static string SqlEmployeByJobTitle {
            get {
                return ResourceManager.GetString("SqlEmployeByJobTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select 
        ///odln.&quot;DocNum&quot;,
        ///odln.&quot;CardCode&quot;,
        ///odln.&quot;CardName&quot;,
        ///ocrd.&quot;U_RouteID&quot;,
        ///CONCAT(ohem.&quot;firstName&quot;,CONCAT(&apos; &apos;, ohem.&quot;lastName&quot;)) as &quot;Name&quot;,
        ///ohem.&quot;mobile&quot;,
        ///sum(odln.&quot;DocTotal&quot;) as &quot;DocTotal&quot;,
        ///case when odln.&quot;GroupNum&quot; = -1 then &apos;Нал&apos;  
        ///	 when odln.&quot;GroupNum&quot; = 2 then &apos;Кредит 7&apos; 
        ///	 when odln.&quot;GroupNum&quot; = 3 then &apos;Кредит 14&apos;  
        ///	 when odln.&quot;GroupNum&quot; = 4 then &apos;Кредит 30&apos;  
        ///	 when odln.&quot;GroupNum&quot; = 7 then &apos;Кредит 40&apos; 
        ///	 when odln.&quot;GroupNum&quot; not in (-1,2,3,4,7) then &apos;def&apos;  end as &quot;PayType&quot;,
        ///case when [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlExpeditorDocList {
            get {
                return ResourceManager.GetString("SqlExpeditorDocList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select ordr.&quot;DocEntry&quot;,  
        ///	ordr.&quot;DocNum&quot;,  
        ///	ordr.&quot;DocStatus&quot;,  
        ///	ordr.&quot;DocDate&quot;, 
        ///	ordr.&quot;DocTime&quot;,  
        ///	ordr.&quot;CardCode&quot;,  
        ///	ordr.&quot;CardName&quot;,  
        ///	ordr.&quot;DocTotal&quot;,  
        ///	ordr.&quot;GrosProfit&quot;,  
        ///	ordr.&quot;OwnerCode&quot; , 
        ///	ordr.&quot;GroupNum&quot;,
        ///	(CASE WHEN ordr.&quot;GroupNum&quot;=&apos;-1&apos; THEN &apos;Cash&apos;  
        ///		WHEN ordr.&quot;GroupNum&quot;=&apos;1&apos; OR ordr.&quot;GroupNum&quot;=&apos;2&apos; OR ordr.&quot;GroupNum&quot;=&apos;3&apos; OR ordr.&quot;GroupNum&quot;=&apos;4&apos;THEN &apos;Credit&apos;  
        ///		WHEN ordr.&quot;GroupNum&quot;=&apos;5&apos; THEN &apos;Bank&apos;  
        ///		WHEN ordr.&quot;GroupNum&quot;=&apos;6&apos; THEN &apos;Consignment&apos;  END) AS &quot;PayType&quot;, 
        ///	&quot;Commen [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlGetAllOpenSapOrderByRegion {
            get {
                return ResourceManager.GetString("SqlGetAllOpenSapOrderByRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select 
        ///	&quot;DocEntry&quot;,	
        ///	&quot;DocNum&quot;,
        ///	&quot;DocStatus&quot;,
        ///	&quot;DocDate&quot;,
        ///	&quot;DocTime&quot;,
        ///	&quot;CardCode&quot;,
        ///	&quot;CardName&quot;,
        ///	&quot;DocTotal&quot;,
        ///	(CASE WHEN &quot;GroupNum&quot;=&apos;-1&apos; THEN &apos;Cash&apos;  
        ///		WHEN &quot;GroupNum&quot;=&apos;1&apos; OR &quot;GroupNum&quot;=&apos;2&apos; OR &quot;GroupNum&quot;=&apos;3&apos; OR &quot;GroupNum&quot;=&apos;4&apos;  THEN &apos;Credit&apos; 
        ///		WHEN &quot;GroupNum&quot;=&apos;5&apos; THEN &apos;Bank&apos; 
        ///		WHEN &quot;GroupNum&quot;=&apos;6&apos; THEN &apos;Consignment&apos; END) AS &quot;PayType&quot; 
        ///	from test.odln 
        ///	where 
        ///		&quot;U_Agent&quot; = &apos;empId&apos; 
        ///		and &quot;DocStatus&quot; = &apos;O&apos; 
        ///	order by &quot;CardCode&quot; asc.
        /// </summary>
        internal static string SqlGetDeliveryByEmpID {
            get {
                return ResourceManager.GetString("SqlGetDeliveryByEmpID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select         ///odln.&quot;DocEntry&quot;,        ///odln.&quot;DocNum&quot;,        ///odln.&quot;CardCode&quot;,         ///odln.&quot;DocDate&quot;,         ///odln.&quot;CardName&quot;,         ///odln.&quot;DocTotal&quot;,         ///odln.&quot;Comments&quot;,         ///odln.&quot;U_Agent&quot;,         ///odln.&quot;U_Supervisor&quot;,        ///octg.&quot;PymntGroup&quot;,        ///ocrd.&quot;U_RouteID&quot;,        ///CONCAT(ohem.&quot;firstName&quot;,CONCAT(&apos; &apos;, ohem.&quot;lastName&quot;)) as &quot;NameAgent&quot; ,        ///CONCAT(ohem1.&quot;firstName&quot;,CONCAT(&apos; &apos;, ohem1.&quot;lastName&quot;)) as &quot;NameSupervisor&quot;         ///from test.odln         ///inner join test.OCTG octg on odln.&quot;GroupNum&quot; = octg.&quot;GroupNum&quot;        ///inner join test.OHEM ohem on odln.&quot;OwnerCode&quot; = ohem.&quot;empID&quot;        ///inner join test.OHEM [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlGetDeliveryReportByRegion {
            get {
                return ResourceManager.GetString("SqlGetDeliveryReportByRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select 
        ///	ohem.&quot;empID&quot;, 
        ///	ohem.&quot;firstName&quot;, 
        ///	ohem.&quot;lastName&quot;, 
        ///	ohem.&quot;middleName&quot;, 
        ///	ohem.&quot;sex&quot;, 
        ///	ohem.&quot;jobTitle&quot;, 
        ///	ohem.&quot;dept&quot;, 
        ///	ohem.&quot;birthDate&quot;,
        ///	ohem.&quot;mobile&quot;,
        ///	ohem.&quot;homeTel&quot;,
        ///	ohem.&quot;email&quot;,
        ///	ohem.&quot;workStreet&quot;,
        ///	ohem.&quot;workCity&quot;
        ///from 
        ///	test.OHEM ohem
        ///	left join test.hem6 hem on ohem.&quot;empID&quot; = hem.&quot;empID&quot;
        ///	left join test.HTM1 htm on hem.&quot;empID&quot; = htm.&quot;empID&quot; 
        ///	left join test.OHTM ohtm on htm.&quot;teamID&quot; = ohtm.&quot;teamID&quot; 
        ///where ohem.&quot;jobTitle&quot; = TITLE
        ///and ohtm.&quot;name&quot; like &apos;%REGION&apos;
        ///gro [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlGetExpedirotByRegion {
            get {
                return ResourceManager.GetString("SqlGetExpedirotByRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT  
        ///	oitm.&quot;ItemCode&quot;, 
        ///	oitm.&quot;ItemName&quot;, 
        ///	itm1.&quot;Price&quot;, 
        ///	ohws.&quot;WhsName&quot;, 
        ///	oitw.&quot;OnHand&quot; - oitw.&quot;IsCommited&quot; as ItemCount, 
        ///	&quot;PicturName&quot; ,
        ///	oitm.&quot;ItmsGrpCod&quot;
        ///FROM  
        ///	TEST.&quot;ITM1&quot; as itm1,    
        ///	TEST.&quot;OITM&quot; as oitm, 
        ///	TEST.&quot;OITW&quot; as oitw, 
        ///	Test.&quot;OWHS&quot; as ohws
        ///where 
        ///	itm1.&quot;ItemCode&quot; = oitm.&quot;ItemCode&quot;  
        ///	and oitm.&quot;frozenFor&quot; = &apos;N&apos; 
        ///	and oitw.&quot;ItemCode&quot; = oitm.&quot;ItemCode&quot; 
        ///	and oitw.&quot;WhsCode&quot; = &apos;WHSCODE&apos; 
        ///	and itm1.&quot;PriceList&quot; = 2 
        ///	and ohws.&quot;WhsCode&quot; = oitw.&quot;WhsCode&quot;
        ///	and oitm.&quot;SellI [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlGetItemsByEmpID {
            get {
                return ResourceManager.GetString("SqlGetItemsByEmpID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select 
        ///	ohtm.&quot;name&quot;
        ///from 
        ///	test.ohem ohem,
        ///	test.HTM1 htm,
        ///	test.OHTM ohtm 
        ///where 1=1
        ///	and ohem.&quot;empID&quot; = EMPID
        ///	and htm.&quot;empID&quot; = ohem.&quot;empID&quot;
        ///	and htm.&quot;teamID&quot; = ohtm.&quot;teamID&quot;.
        /// </summary>
        internal static string SqlGetRootNameByEmpID {
            get {
                return ResourceManager.GetString("SqlGetRootNameByEmpID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select distinct(hem.&quot;empID&quot;) as manager
        ///from  
        ///	test.hem6 hem
        ///	left join test.HTM1 htm on hem.&quot;empID&quot; = htm.&quot;empID&quot; 
        ///	left join test.OHTM ohtm on htm.&quot;teamID&quot; = ohtm.&quot;teamID&quot; 
        ///where  1=1
        ///	and hem.&quot;roleID&quot; in (2) 
        ///	and hem.&quot;U_EndDate&quot; is null
        ///	and ohtm.&quot;name&quot; = &apos;rootName&apos; 
        ///group by hem.&quot;empID&quot;
        ///limit 1;.
        /// </summary>
        internal static string SqlGetSupervisorByRoot {
            get {
                return ResourceManager.GetString("SqlGetSupervisorByRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select 
        ///	dln.&quot;ItemCode&quot;,
        ///	dln.&quot;Dscription&quot;,
        ///	sum(dln.&quot;Quantity&quot;)as &quot;Quantity&quot;,
        ///	dln.&quot;ShipDate&quot;,
        ///	dln.&quot;Price&quot;,
        ///	odln.&quot;U_Agent&quot;,
        ///	odln.&quot;DocDate&quot;,
        ///	odln.&quot;DocDueDate&quot;
        ///from test.odln odln,
        ///	test.dln1 dln
        ///where odln.&quot;CANCELED&quot; = &apos;N&apos;
        ///	and odln.&quot;DocStatus&quot; = &apos;O&apos;
        ///	and dln.&quot;DocEntry&quot; = odln.&quot;DocEntry&quot;
        ///	and odln.&quot;DocDate&quot; &gt; FROM
        ///	and odln.&quot;U_Agent&quot; = AGENT
        ///group by dln.&quot;ItemCode&quot;,
        ///	dln.&quot;Dscription&quot;,
        ///	dln.&quot;ShipDate&quot;,
        ///	dln.&quot;Price&quot;,
        ///	odln.&quot;U_Agent&quot;,
        ///	odln.&quot;DocDate&quot;,
        ///	odln.&quot;DocDueDate&quot;
        ///;.
        /// </summary>
        internal static string SqlItemsForLoading {
            get {
                return ResourceManager.GetString("SqlItemsForLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT 
        ///a.&quot;DocDate&quot;,
        ///sum(a.&quot;SumZakaza&quot;) as &quot;SumZakaza&quot;, 
        ///sum(a.&quot;SumProdaji&quot;) as &quot;SumProdaji&quot;,
        ///sum(a.&quot;SumOplaty&quot;) as &quot;SumOplaty&quot;, 
        ///sum((case when a.&quot;SumVozvrat&quot; is null then 0 else a.&quot;SumVozvrat&quot; end)) as &quot;SumVozvrat&quot;
        ///FROM
        ///(
        ///	SELECT  
        ///	ordr.&quot;DocNum&quot;,
        ///	ordr.&quot;DocDate&quot;, 
        ///	Case when ordr.&quot;DocTotal&quot; is null then 0 else ordr.&quot;DocTotal&quot; end as &quot;SumZakaza&quot;, 
        ///	case when oinv.&quot;DocTotal&quot; is null then 0 else oinv.&quot;DocTotal&quot; end as &quot;SumProdaji&quot;, 
        ///	case when orct.&quot;CashSum&quot; is null then 0 else orct.&quot;CashSum&quot; e [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlOkReport {
            get {
                return ResourceManager.GetString("SqlOkReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT 
        ///	ordr.&quot;DocEntry&quot;,
        ///	ordr.&quot;DocNum&quot;,
        ///	ordr.&quot;DocDate&quot;,
        ///	ordr.&quot;CardCode&quot;,
        ///	ordr.&quot;CardName&quot;, 
        ///	Case when ordr.&quot;DocTotal&quot; is null then 0 else ordr.&quot;DocTotal&quot; end as &quot;SumZakaza&quot;, 
        ///	case when oinv.&quot;DocTotal&quot; is null then 0 else oinv.&quot;DocTotal&quot; end as &quot;SumProdaji&quot;, 
        ///	case when orct.&quot;CashSum&quot; is null then 0 else orct.&quot;CashSum&quot; end as &quot;SumOplaty&quot;,
        ///	(select (case when ordn.&quot;DocTotal&quot; is null then 0 else ordn.&quot;DocTotal&quot; end)  from 
        ///		test.rdn1 rdn, 
        ///		test.ordn ordn 
        ///	where 1=1
        ///		and ordn.&quot;CANCELED&quot;  [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlOkReportDetails {
            get {
                return ResourceManager.GetString("SqlOkReportDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT 
        ///&apos;agent&apos; as &quot;jopTitle&quot;,S8.&quot;OwnerCode&quot; as &quot;code&quot;, CONCAT(S5.&quot;firstName&quot;,  CONCAT(&apos; &apos;, S5.&quot;lastName&quot;)) as &quot;Name&quot;,  SUM(orct.&quot;DocTotal&quot;) as &quot;sum&quot;, SUM(orct.&quot;DocTotal&quot; * S7.&quot;U_Percentage&quot; * 0.01) AS &quot;commission&quot;
        ///FROM OINV S8
        ///left JOIN rct2 rct ON S8.&quot;DocEntry&quot; = rct.&quot;DocEntry&quot;
        ///left JOIN Orct orct ON rct.&quot;DocNum&quot; = orct.&quot;DocEntry&quot;
        ///left JOIN OHEM S5 ON S8.&quot;OwnerCode&quot; = S5.&quot;Code&quot;
        ///left JOIN HEM6 S6 ON S5.&quot;Code&quot; = S6.&quot;empID&quot;
        ///left JOIN &quot;@BMM_OHTY_EXT&quot; S7 ON S7.&quot;Code&quot; = S6.&quot;roleID&quot;
        ///WHERE 
        ///(S6.&quot;roleID&quot;  [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlPercentAgent {
            get {
                return ResourceManager.GetString("SqlPercentAgent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT 
        ///&apos;delivery&apos; as &quot;jopTitle&quot;, S8.&quot;U_Agent&quot; as &quot;code&quot;, CONCAT(S5.&quot;firstName&quot;,  CONCAT(&apos; &apos;, S5.&quot;lastName&quot;)) as &quot;Name&quot;,  SUM(orct.&quot;DocTotal&quot;) as &quot;sum&quot;, SUM(orct.&quot;DocTotal&quot; * S7.&quot;U_Percentage&quot; * 0.01) AS &quot;commission&quot;
        ///FROM OINV S8
        ///left JOIN rct2 rct ON S8.&quot;DocEntry&quot; = rct.&quot;DocEntry&quot;
        ///left JOIN Orct orct ON rct.&quot;DocNum&quot; = orct.&quot;DocEntry&quot;
        ///left JOIN OHEM S5 ON S8.&quot;U_Agent&quot; = S5.&quot;Code&quot;
        ///left JOIN HEM6 S6 ON S5.&quot;Code&quot; = S6.&quot;empID&quot;
        ///left JOIN &quot;@BMM_OHTY_EXT&quot; S7 ON S7.&quot;Code&quot; = S6.&quot;roleID&quot;
        ///WHERE 
        ///S6.&quot;roleID&quot; = [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlPercentDelivery {
            get {
                return ResourceManager.GetString("SqlPercentDelivery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT 
        ///S8.&quot;DocEntry&quot;, S8.&quot;U_Agent&quot; as &quot;code&quot;, orct.&quot;CardName&quot; as &quot;Name&quot;,  orct.&quot;DocTotal&quot; as &quot;sum&quot;,orct.&quot;DocDate&quot; as &quot;Date&quot;,orct.&quot;CardCode&quot; , s8.&quot;DocNum&quot;
        ///FROM OINV S8
        ///left JOIN rct2 rct ON S8.&quot;DocEntry&quot; = rct.&quot;DocEntry&quot;
        ///left JOIN Orct orct ON rct.&quot;DocNum&quot; = orct.&quot;DocEntry&quot;
        ///left JOIN OHEM S5 ON S8.&quot;U_Agent&quot; = S5.&quot;Code&quot;
        ///left JOIN HEM6 S6 ON S5.&quot;Code&quot; = S6.&quot;empID&quot;
        ///left JOIN &quot;@BMM_OHTY_EXT&quot; S7 ON S7.&quot;Code&quot; = S6.&quot;roleID&quot;
        ///WHERE 
        ///S6.&quot;roleID&quot; = 4
        ///and orct.&quot;DocDate&quot; BETWEEN FROMDATE AND TODATE
        ///AND S8.&quot;CA [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlPercentDetailsDelivery {
            get {
                return ResourceManager.GetString("SqlPercentDetailsDelivery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT
        ///S8.&quot;DocEntry&quot;, ocrd.&quot;U_RouteID&quot; as &quot;Root&quot;, orct.&quot;CardName&quot; as &quot;Name&quot;, orct.&quot;DocTotal&quot; as &quot;Sum&quot;, orct.&quot;DocDate&quot; as &quot;Date&quot;, s8.&quot;DocNum&quot;,orct.&quot;CardCode&quot;  
        ///FROM OINV S8
        ///left JOIN rct2 rct ON S8.&quot;DocEntry&quot; = rct.&quot;DocEntry&quot;
        ///left JOIN Orct orct ON rct.&quot;DocNum&quot; = orct.&quot;DocEntry&quot;
        ///left JOIN OCRD ocrd on S8.&quot;CardCode&quot; = ocrd.&quot;CardCode&quot;
        ///WHERE 
        ///orct.&quot;DocDate&quot; BETWEEN FROMDATE AND TODATE
        ///AND S8.&quot;CANCELED&quot; = &apos;N&apos;
        ///and orct.&quot;Canceled&quot; = &apos;N&apos;
        ///and ocrd.&quot;U_RouteID&quot; = XXXX
        ///and ocrd.&quot;U_RouteID&quot; != &apos;OFFICE&apos;
        ///;.
        /// </summary>
        internal static string SqlPercentDetailsSupervisors {
            get {
                return ResourceManager.GetString("SqlPercentDetailsSupervisors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT 
        ///&apos;supervisor&apos;as &quot;jopTitle&quot;, &apos;0&apos; as &quot;code&quot;, ocrd.&quot;U_RouteID&quot; as &quot;Name&quot;,  SUM(orct.&quot;DocTotal&quot;) as &quot;sum&quot;, SUM(orct.&quot;DocTotal&quot; * (select pr.&quot;U_Percentage&quot; from &quot;@BMM_OHTY_EXT&quot; pr where pr.&quot;Code&quot; = 2) * 0.01) AS &quot;commission&quot;
        ///FROM OINV S8
        ///left JOIN rct2 rct ON S8.&quot;DocEntry&quot; = rct.&quot;DocEntry&quot;
        ///left JOIN Orct orct ON rct.&quot;DocNum&quot; = orct.&quot;DocEntry&quot;
        ///left JOIN OCRD ocrd on S8.&quot;CardCode&quot; = ocrd.&quot;CardCode&quot;
        ///WHERE 
        ///orct.&quot;DocDate&quot; BETWEEN FROMDATE AND TODATE
        ///AND S8.&quot;CANCELED&quot; = &apos;N&apos;
        ///and orct.&quot;Canceled&quot; = &apos;N&apos;
        /// [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlPercentSupervisors {
            get {
                return ResourceManager.GetString("SqlPercentSupervisors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT 
        ///S8.&quot;DocEntry&quot;, s8.&quot;OwnerCode&quot; as &quot;code&quot;, orct.&quot;CardName&quot; as &quot;Name&quot;,  orct.&quot;DocTotal&quot; as &quot;sum&quot;,orct.&quot;DocDate&quot; as &quot;Date&quot;,orct.&quot;CardCode&quot; , s8.&quot;DocNum&quot;
        ///FROM OINV S8
        ///left JOIN rct2 rct ON S8.&quot;DocEntry&quot; = rct.&quot;DocEntry&quot;
        ///left JOIN Orct orct ON rct.&quot;DocNum&quot; = orct.&quot;DocEntry&quot;
        ///left JOIN OHEM S5 ON S8.&quot;OwnerCode&quot; = S5.&quot;Code&quot;
        ///left JOIN HEM6 S6 ON S5.&quot;Code&quot; = S6.&quot;empID&quot;
        ///left JOIN &quot;@BMM_OHTY_EXT&quot; S7 ON S7.&quot;Code&quot; = S6.&quot;roleID&quot;
        ///WHERE 
        ///(S6.&quot;roleID&quot; = 1 OR S6.&quot;roleID&quot; = 8 OR S6.&quot;roleID&quot; = 9)
        ///and orct.&quot;DocD [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlPrecentDetailsAgent_ {
            get {
                return ResourceManager.GetString("SqlPrecentDetailsAgent ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select 
        ///	ODPO.&quot;DocNum&quot;,
        ///	ODPO.&quot;DocDate&quot;,
        ///	ODPO.&quot;CardCode&quot;,
        ///	ODPO.&quot;CardName&quot;,
        ///	ODPO.&quot;DocTotal&quot;,
        ///	CONCAT(OHEM.&quot;firstName&quot;,CONCAT(&apos; &apos;, OHEM.&quot;lastName&quot;)) as &quot;Name&quot; 
        ///from 
        ///	test.ODPO,
        ///	test.OHEM 
        ///where 
        ///	ODPO.&quot;CANCELED&quot; = &apos;N&apos; 
        ///	and ODPO.&quot;OwnerCode&quot; = OHEM.&quot;empID&quot;
        ///	and ODPO.&quot;DocDate&quot; between FROMDATE and TODATE ;.
        /// </summary>
        internal static string SqlPrepaymentReport {
            get {
                return ResourceManager.GetString("SqlPrepaymentReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select &quot;ItmsGrpCod&quot; , &quot;ItmsGrpNam&quot; from test.oitb;.
        /// </summary>
        internal static string SqlProductGroupName {
            get {
                return ResourceManager.GetString("SqlProductGroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select distinct(&quot;U_RouteID&quot;) as &quot;URouteID&quot; from test.ocrd where &quot;U_RouteID&quot; like &apos;ROOT # 0% XX&apos; or &quot;U_RouteID&quot; = &apos;MARKET&apos; or &quot;U_RouteID&quot; = &apos;OFFICE&apos;;.
        /// </summary>
        internal static string SqlURouteID {
            get {
                return ResourceManager.GetString("SqlURouteID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select owhs.&quot;WhsCode&quot; from test.owhs; .
        /// </summary>
        internal static string SqlWarehouses {
            get {
                return ResourceManager.GetString("SqlWarehouses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select 
        ///oitw.&quot;ItemCode&quot;,
        ///oitm.&quot;ItemName&quot;,
        ///oitw.&quot;OnHand&quot;,
        ///oitw.&quot;IsCommited&quot;,
        ///oitw.&quot;OnOrder&quot;
        ///from test.OITM oitm
        ///left join test.OITW oitw on oitm.&quot;ItemCode&quot; = oitw.&quot;ItemCode&quot;
        ///where 1=1
        ///replaseidproductGroup
        ///replasestock
        ///response
        ///group by 
        ///oitw.&quot;ItemCode&quot;,
        ///oitm.&quot;ItemName&quot;,
        ///oitw.&quot;OnHand&quot;,
        ///oitw.&quot;IsCommited&quot;,
        ///oitw.&quot;OnOrder&quot;
        ///;.
        /// </summary>
        internal static string SqlWarehouseWithdrawal {
            get {
                return ResourceManager.GetString("SqlWarehouseWithdrawal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select
        ///	a.&quot;DocEntry&quot; as &quot;IdReceipts&quot;,
        ///	a.&quot;DocNum&quot; as &quot;ReceiptNumber&quot;,
        ///	a.&quot;DocDate&quot; as &quot;ReceiptDate&quot;,
        ///	a.&quot;ItemCode&quot; as &quot;ProductCode&quot;,	
        ///	a.&quot;Dscription&quot; as &quot;ProductName&quot;,
        ///	case when a.&quot;DocDate&quot; &lt; FROMDATE then a.&quot;OpenCreQty&quot; else 0 end as &quot;QuantityAtStart&quot;,
        ///	case when a.&quot;DocDate&quot; &lt; FROMDATE then 0 else a.&quot;Quantity&quot; end as &quot;ReceiptsPeriod&quot;,
        ///	a.&quot;Qty_Ret&quot; as &quot;ReturnsPeriod&quot;,
        ///	a.&quot;OpenCreQty&quot; - a.&quot;INV_QTY&quot; as &quot;QuantityAtEnd&quot;,
        ///	a.&quot;INV_QTY&quot; as &quot;Sales&quot;,
        ///	a.&quot;U_RecPrice&quot; as &quot;RecPrice&quot;,
        ///	a.&quot;INV_QTY&quot; * (a.&quot;U_R [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string SqlСonsignmentReport {
            get {
                return ResourceManager.GetString("SqlСonsignmentReport", resourceCulture);
            }
        }
    }
}
