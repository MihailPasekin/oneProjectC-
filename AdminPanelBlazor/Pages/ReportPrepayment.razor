@page "/reportprepayment"

@using AdminPanelBlazor.Models
@using AdminPanelBlazor.Services
@using AdminPanelBlazor.Interfaces
@using EComersObjectLib.Objects;
@using Microsoft.JSInterop;
@using EComersObjectLib;

@inject ExcelService excelService
@inject Microsoft.JSInterop.IJSRuntime JS
@inject NavigationManager navigationmanager
@inject INavigation navigationParams
@inject IAccounting AccountingService

<body class="body ,colorFont">

    <h3>СreportPrepayment</h3>
    <div class="row" style="padding-top:30px">
        <div class='col-sm-2'>
            <h3 class="colorFont">С даты</h3>
        </div>

        <div class='col-sm-2'>
            <InputDate @bind-Value="FromDate"></InputDate>
        </div>
    </div>

    <div class="row">
        <div class='col-sm-2'>
            <h3 class="colorFont">По дату</h3>
        </div>

        <div class='col-sm-2'>
            <InputDate @bind-Value="ToDate"></InputDate>
        </div>
    </div>
    <div>
        <button class=" btn-lg btn-primary, input_color2" @onclick="(()=>GetReport())" type="submit">Показать отчет</button>
    </div>
    <div style="padding:30px"></div>
    <table border=2 cellspacing="0" cellpadding="10" class="model_table , colorFont">
        <thead class="model_table">
            <tr>
                <th>Номер документа</th>
                <th>Дата</th>
                <th>CardCode</th>
                <th>CardName</th>
                <th>DocTotal</th>
                <th>Имя</th>
            </tr>
            @if (prepaymentList != null)
            {
                @foreach (var prepayment in prepaymentList)
                {
                    <tr>
                        <td>@prepayment.DocNum</td>
                        <td>@prepayment.DocDate.ToString("dd.MM.yyyy")</td>
                        <td>@prepayment.CardCode</td>
                        <td>@prepayment.CardName</td>
                        <td>@prepayment.DocTotal</td>
                        <td>@prepayment.Name</td>
                        
                    </tr>
                }
            }
        </thead>
    </table>
    <!--<button class=" btn-lg btn-primary, input_color2" @onclick="@CreateDocument">Скачать Excel</button>-->
</body>
@code {
    private List<PrepaymentReport> prepaymentList = new List<PrepaymentReport>();
    private DateTime FromDate { get; set; } = DateTime.Now.Date;
    private DateTime ToDate { get; set; } = DateTime.Now.Date;

    [Parameter]
    [SupplyParameterFromQuery]
    public string? From { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string? To { get; set; }

    protected override async Task OnInitializedAsync()
    {
        From = From ?? DateTime.Now.Date.ToString("yyyy_MM_dd");
        To = To ?? DateTime.Now.Date.ToString("yyyy_MM_dd");
        prepaymentList = await AccountingService.GetPrepaymentReportAsync(From.Replace("_", "."), To.Replace("_", "."));
        await Task.CompletedTask;
    }
    protected async Task GetReport()
    {
        From =  FromDate.Date.ToString("yyyy_MM_dd");
        To =  ToDate.Date.ToString("yyyy_MM_dd");
        prepaymentList = await AccountingService.GetPrepaymentReportAsync(From.Replace("_", "."), To.Replace("_", "."));
        //await excelService.GenerateWeatherСonsignmentAsync(FromDate, ToDate, JS, prepaymentList, "export.xlsx");
        await Task.CompletedTask;
    }
}
